{{- $hasV1 := has "external-secrets.io/v1" .Capabilities.APIVersions -}}
{{- $hasV1beta1 := has "external-secrets.io/v1beta1" .Capabilities.APIVersions -}}
{{- if and .Values.externalSecrets.enabled (or $hasV1 $hasV1beta1) }}
apiVersion: {{ if $hasV1 }}external-secrets.io/v1{{ else }}external-secrets.io/v1beta1{{ end }}
kind: ExternalSecret
metadata:
  name: {{ .Values.externalSecrets.targetName | default (printf "%s-secrets" (include "bolcd.fullname" .)) }}
  labels:
    app: {{ include "bolcd.name" . }}
spec:
  refreshInterval: {{ .Values.externalSecrets.refreshInterval | default "1h" | quote }}
  secretStoreRef:
    name: {{ .Values.externalSecrets.secretStoreRef.name | quote }}
    kind: {{ .Values.externalSecrets.secretStoreRef.kind | default "ClusterSecretStore" | quote }}
  target:
    name: {{ .Values.externalSecrets.targetName | default (printf "%s-secrets" (include "bolcd.fullname" .)) | quote }}
    creationPolicy: Merge
  data:
{{- range .Values.externalSecrets.data }}
    - secretKey: {{ .secretKey | quote }}
      remoteRef:
        key: {{ .remoteRef.key | quote }}
        {{- if .remoteRef.property }}
        property: {{ .remoteRef.property | quote }}
        {{- end }}
{{- end }}
{{- end }}


