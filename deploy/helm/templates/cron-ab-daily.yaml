{{- if .Values.cron.abDaily.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "bolcd.fullname" . }}-ab-daily
  labels:
    app: {{ include "bolcd.name" . }}
spec:
  schedule: {{ .Values.cron.abDaily.schedule | default "5 1 * * *" | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ include "bolcd.name" . }}
        spec:
          serviceAccountName: {{ include "bolcd.jobsServiceAccountName" . }}
          restartPolicy: OnFailure
          containers:
            - name: ab-daily
              image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
              imagePullPolicy: IfNotPresent
              env:
                {{- /* Optional direct overrides for Splunk URL/verify at Cron scope */}}
                {{- if .Values.cron.abDaily.splunk.url }}
                - name: BOLCD_SPLUNK_URL
                  value: {{ .Values.cron.abDaily.splunk.url | quote }}
                {{- end }}
                {{- if hasKey .Values.cron.abDaily.splunk "verify" }}
                - name: BOLCD_SPLUNK_VERIFY
                  value: {{ ternary "1" "0" .Values.cron.abDaily.splunk.verify | quote }}
                {{- end }}
                - name: INDEX
                  value: {{ .Values.cron.abDaily.splunk.index | default "_internal" | quote }}
                - name: HOURS
                  value: {{ .Values.cron.abDaily.hours | default 24 | quote }}
                - name: B_EXCLUDE
                  value: {{ .Values.cron.abDaily.splunk.exclude | default "sourcetype=splunkd*" | quote }}
                - name: OUT_DIR
                  value: "/reports/raw"
                {{- if .Values.secretEnv }}
                {{- range .Values.secretEnv }}
                - name: {{ .name | quote }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ .secretName | quote }}
                      key: {{ .secretKey | quote }}
                {{- end }}
                {{- end }}
                {{- /* Extra envs for this CronJob only */}}
                {{- range $i, $e := (.Values.cron.abDaily.extraEnv | default list) }}
                - name: {{ $e.name | quote }}
                  {{- if $e.value }}
                  value: {{ $e.value | quote }}
                  {{- else if $e.valueFrom }}
                  valueFrom:
{{ toYaml $e.valueFrom | indent 20 }}
                  {{- end }}
                {{- end }}
              command: ["/bin/bash","-lc"]
              args:
                - |
                  set -euo pipefail
                  : "${BOLCD_SPLUNK_URL:?missing}"
                  : "${BOLCD_SPLUNK_TOKEN:?missing}"
                  mkdir -p "${OUT_DIR}"
                  D=$(date +%F)
                  echo "[A] collecting ${HOURS}h from index=${INDEX}"
                  i=${HOURS}
                  while [ "$i" -ge 1 ]; do
                    FROM="${i}h"; TO="$((i-1))h"
                    OUT_A="${OUT_DIR}/splunk_A_${D}_${FROM}_${TO}.jsonl"
                    QUERY_A="index=${INDEX} earliest=-${FROM}@h latest=-${TO}@h+59s | fields *"
                    echo "  A ${FROM}..${TO} -> ${OUT_A}"
                    echo "[DEBUG] A: ${QUERY_A}"
                    python scripts/fetch_data.py splunk "${QUERY_A}" --out "${OUT_A}" || true
                    i=$((i-1))
                  done
                  echo "[B] collecting with exclude: ${B_EXCLUDE}"
                  # Auto-wrap B_EXCLUDE with parentheses if it contains spaces and is not already wrapped
                  _B_EXPR="${B_EXCLUDE}"
                  if [[ "${_B_EXPR}" != \(*\) ]]; then
                    _B_EXPR="(${_B_EXPR})"
                  fi
                  i=${HOURS}
                  while [ "$i" -ge 1 ]; do
                    FROM="${i}h"; TO="$((i-1))h"
                    OUT_B="${OUT_DIR}/splunk_B_${D}_${FROM}_${TO}.jsonl"
                    QUERY_B="index=${INDEX} earliest=-${FROM}@h latest=-${TO}@h+59s NOT ${_B_EXPR} | fields *"
                    echo "  B ${FROM}..${TO} -> ${OUT_B}"
                    echo "[DEBUG] B: ${QUERY_B}"
                    python scripts/fetch_data.py splunk "${QUERY_B}" --out "${OUT_B}" || true
                    i=$((i-1))
                  done
                  cat "${OUT_DIR}/splunk_A_${D}_"*.jsonl > "${OUT_DIR}/splunk_A_${D}.jsonl" || true
                  cat "${OUT_DIR}/splunk_B_${D}_"*.jsonl > "${OUT_DIR}/splunk_B_${D}.jsonl" || true
                  echo "[report] writing /reports/ab_${D}.*"
                  # Emit to stdout and also persist JSON with tee for robustness
                  python scripts/ab_report.py \
                    --a "${OUT_DIR}/splunk_A_${D}.jsonl" \
                    --b "${OUT_DIR}/splunk_B_${D}.jsonl" \
                    --out-prefix "/reports/ab_${D}"{{- if .Values.cron.abDaily.keys }} \
                    --keys {{ join " " .Values.cron.abDaily.keys }}{{- end }} | tee "/reports/ab_${D}_effects.json" >/dev/null
              volumeMounts:
                - name: reports
                  mountPath: /reports
          volumes:
            - name: reports
              {{- if .Values.reportsPVC.enabled }}
              persistentVolumeClaim:
                claimName: {{ .Values.reportsPVC.existingClaim | default (include "bolcd.fullname" .) }}-reports
              {{- else }}
              emptyDir: {}
              {{- end }}
{{- end }}


