image:
  repository: ghcr.io/fitydo/bol-cd
  tag: sha-eecf43
  pullPolicy: IfNotPresent

replicaCount: 2

service:
  type: ClusterIP
  port: 8080

env:
  BOLCD_API_KEYS: "view:viewer,testop:operator,admin:admin"
  # OIDC (optional)
  # BOLCD_OIDC_ISS: "https://issuer.example.com/"
  # BOLCD_OIDC_AUD: "bolcd-api"
  # BOLCD_OIDC_JWKS: "https://issuer.example.com/.well-known/jwks.json"
  # CORS
  BOLCD_CORS_ORIGINS: "https://console.example.com"
  # Rate limit
  BOLCD_RATE_LIMIT_ENABLED: "1"
  BOLCD_RATE_LIMIT_RPS: "20"
  BOLCD_RATE_LIMIT_BURST: "40"
  # HTTPS/HSTS
  BOLCD_REQUIRE_HTTPS: "0"
  BOLCD_HSTS_ENABLED: "1"

# Optional plain env vars
envVars:
  - name: PYTHONPATH
    value: /app/src

apiKeysSecret:
  enabled: true
  name: bolcd-apikeys
  key: BOLCD_API_KEYS

# Reference Secret(s) for credentials (e.g., SIEM)
secretEnv:
  - name: BOLCD_SPLUNK_URL
    secretName: bolcd-secrets
    secretKey: splunk_url
  - name: BOLCD_SPLUNK_TOKEN
    secretName: bolcd-secrets
    secretKey: splunk_token
  - name: BOLCD_SENTINEL_WORKSPACE_ID
    secretName: bolcd-secrets
    secretKey: sentinel_workspace_id
  - name: BOLCD_AZURE_TOKEN
    secretName: bolcd-secrets
    secretKey: azure_token
  - name: BOLCD_AZURE_SUBSCRIPTION_ID
    secretName: bolcd-secrets
    secretKey: azure_subscription_id
  - name: BOLCD_AZURE_RESOURCE_GROUP
    secretName: bolcd-secrets
    secretKey: azure_resource_group
  - name: BOLCD_AZURE_WORKSPACE_NAME
    secretName: bolcd-secrets
    secretKey: azure_workspace_name
  - name: BOLCD_OPENSEARCH_ENDPOINT
    secretName: bolcd-secrets
    secretKey: opensearch_endpoint
  - name: BOLCD_OPENSEARCH_BASIC
    secretName: bolcd-secrets
    secretKey: opensearch_basic

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 1
    memory: 1Gi

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  capabilities:
    drop: ["ALL"]

podSecurityContext:
  fsGroup: 10001
  seccompProfile:
    type: RuntimeDefault

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    # Ingress-level rate limiting (complements app-side)
    nginx.ingress.kubernetes.io/limit-rps: "20"
    nginx.ingress.kubernetes.io/limit-burst: "40"
  hosts:
    - host: bolcd.example.com
  exposeMetrics: false
  basicAuth:
    enabled: false
    secretName: bolcd-basic-auth
    realm: "Authentication Required"
  whitelistSourceRanges: []
  tls:
    - hosts: ["bolcd.example.com"]
      secretName: bolcd-tls

hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60

pdb:
  enabled: true
  minAvailable: 1

networkPolicy:
  enabled: true
  # Allow from specific CIDRs (e.g., corporate ranges) and namespaces (e.g., ingress-nginx, monitoring)
  ingressFromCIDRs: []
  allowFromNamespaces:
    - ingress-nginx
    - bolcd-prod2
    - monitoring
    - prometheus

logs:
  emptyDir: true

persistence:
  logs:
    enabled: true
    # To enable persistent audit logs, set storageClass if needed for your cluster
    size: 5Gi
    storageClass: ""
    existingClaim: ""

monitor:
  serviceAnnotationsEnabled: true
  serviceMonitorEnabled: true
  prometheusRelease: prometheus
  scrapeInterval: 30s
  alertsEnabled: true
  alerts:
    p95Ms: 0.1
    ab:
      minReductionDrop: 0.4
      maxNewInBUnique: 500
      maxNewInBCount: 5000
      maxStaleSeconds: 21600

  grafana:
    enabled: true
    folder: "Observability"
  alertmanager:
    enabled: true
    slack:
      secretName: alertmanager-slack
      key: webhook
      channel: "#soc-alerts"

backup:
  enabled: false
  pvc:
    enabled: false
    size: 20Gi
    storageClass: ""
    existingClaim: ""
  s3:
    enabled: false
    bucket: ""
    prefix: "bolcd"
    region: "us-east-1"
    endpoint: ""
    awsSecretName: bolcd-backup-aws
  image: "alpine:3.20"
  schedule: "0 2 * * *"

cron:
  recompute:
    enabled: true
    schedule: "0 3 * * *"
    operatorApiKeySecret:
      name: bolcd-operator-key
      key: key
    # fallback（未使用想定）
    operatorApiKey: ""
    body: "{}"

  abWeekly:
    enabled: true
    schedule: "0 4 * * 1"
    prefixA: "/reports/raw/splunk_A_"
    prefixB: "/reports/raw/splunk_B_"
    # 日次と同じキーで週次も安定化
    keys: ["host", "index", "sourcetype", "source", "component", "group"]

  abDaily:
    enabled: true
    schedule: "5 1 * * *"
    hours: 24
    # 集計のキーを限定して、uniqueの安定性を高める
    keys: ["host", "index", "sourcetype", "source", "component", "group"]
    splunk:
      index: "_internal"
      exclude: "sourcetype=splunkd*"

  abNotify:
    enabled: true
    schedule: "15 7 * * *"
    webhookSecret:
      name: "bolcd-notify"
      key: "webhook"

  cleanup:
    enabled: true
    schedule: "30 3 * * *"
    keepDays: 14

reportsPVC:
  enabled: true
  size: 5Gi
  storageClass: ""
  existingClaim: ""

externalSecrets:
  enabled: true
  secretStoreRef:
    # Switch to the in-namespace SecretStore that references Vault
    name: prod-store
    kind: SecretStore
  targetName: bolcd-secrets
  refreshInterval: 1h
  data:
    - secretKey: splunk_url
      remoteRef:
        key: bolcd
        property: splunk_url
    - secretKey: splunk_token
      remoteRef:
        key: bolcd
        property: splunk_token
    - secretKey: sentinel_workspace_id
      remoteRef:
        key: bolcd
        property: sentinel_workspace_id
    - secretKey: azure_token
      remoteRef:
        key: bolcd
        property: azure_token
    - secretKey: azure_subscription_id
      remoteRef:
        key: bolcd
        property: azure_subscription_id
    - secretKey: azure_resource_group
      remoteRef:
        key: bolcd
        property: azure_resource_group
    - secretKey: azure_workspace_name
      remoteRef:
        key: bolcd
        property: azure_workspace_name
    - secretKey: opensearch_endpoint
      remoteRef:
        key: bolcd
        property: opensearch_endpoint
    - secretKey: opensearch_basic
      remoteRef:
        key: bolcd
        property: opensearch_basic


