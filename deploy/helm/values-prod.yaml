image:
  repository: ghcr.io/fitydo/bol-cd
  tag: latest
  pullPolicy: IfNotPresent

replicaCount: 2

service:
  type: ClusterIP
  port: 8080

env:
  BOLCD_API_KEYS: "view:viewer,testop:operator"

# Optional plain env vars
envVars:
  - name: PYTHONPATH
    value: /app/src

apiKeysSecret:
  enabled: false
  name: bolcd-apikeys
  key: BOLCD_API_KEYS

# Reference Secret(s) for credentials (e.g., SIEM)
secretEnv:
  - name: BOLCD_SPLUNK_URL
    secretName: bolcd-secrets
    secretKey: splunk_url
  - name: BOLCD_SPLUNK_TOKEN
    secretName: bolcd-secrets
    secretKey: splunk_token
  - name: BOLCD_SENTINEL_WORKSPACE_ID
    secretName: bolcd-secrets
    secretKey: sentinel_workspace_id
  - name: BOLCD_AZURE_TOKEN
    secretName: bolcd-secrets
    secretKey: azure_token
  - name: BOLCD_AZURE_SUBSCRIPTION_ID
    secretName: bolcd-secrets
    secretKey: azure_subscription_id
  - name: BOLCD_AZURE_RESOURCE_GROUP
    secretName: bolcd-secrets
    secretKey: azure_resource_group
  - name: BOLCD_AZURE_WORKSPACE_NAME
    secretName: bolcd-secrets
    secretKey: azure_workspace_name
  - name: BOLCD_OPENSEARCH_ENDPOINT
    secretName: bolcd-secrets
    secretKey: opensearch_endpoint
  - name: BOLCD_OPENSEARCH_BASIC
    secretName: bolcd-secrets
    secretKey: opensearch_basic

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: 1
    memory: 1Gi

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  capabilities:
    drop: ["ALL"]

podSecurityContext:
  fsGroup: 10001
  seccompProfile:
    type: RuntimeDefault

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
  hosts:
    - host: bolcd.example.com
  exposeMetrics: false
  basicAuth:
    enabled: false
    secretName: bolcd-basic-auth
    realm: "Authentication Required"
  whitelistSourceRanges: []
  tls:
    - hosts: ["bolcd.example.com"]
      secretName: bolcd-tls

hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70

pdb:
  enabled: true
  minAvailable: 1

networkPolicy:
  enabled: true
  # Optional: block everywhere and open to specific CIDRs
  ingressFromCIDRs: []

logs:
  emptyDir: true

persistence:
  logs:
    enabled: true
    # To enable persistent audit logs, set storageClass if needed for your cluster
    size: 5Gi
    storageClass: ""
    existingClaim: ""

monitor:
  serviceAnnotationsEnabled: true
  serviceMonitorEnabled: false
  prometheusRelease: prometheus
  scrapeInterval: 30s


