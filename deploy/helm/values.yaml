# Default values for bolcd
replicaCount: 2

image:
  repository: ghcr.io/example/bol-cd
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8000"
  prometheus.io/path: "/metrics"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: bolcd.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: bolcd-tls
      hosts:
        - bolcd.example.com

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Application configuration
config:
  # Database
  database:
    url: "postgresql://bolcd:password@postgresql:5432/bolcd"
    maxConnections: 20
    poolSize: 10
  
  # Redis
  redis:
    url: "redis://redis:6379/0"
    ttl: 3600
  
  # Policy parameters
  policy:
    alpha: "0.01"  # ADR-0002 compliant
    supportMin: "20"
    liftMin: "1.5"
    nearWindowSec: "3600"
    lateTtlSec: "86400"
    falseSuppressionThreshold: "0.3"
    highSeverityProtection: "true"
    rootPass: "true"
    allowlistRules: "R-CRITICAL-1,R-CRITICAL-2"
    policyVersion: "safe-1.0.0"
  
  # API Keys (will be overridden by secrets)
  apiKeys: ""
  
  # SIEM connectors
  siem:
    splunkUrl: ""
    splunkToken: ""
    splunkAuthScheme: "bearer"
    azureTenantId: ""
    azureClientId: ""
    azureClientSecret: ""
    opensearchUrl: ""
    opensearchUser: ""
    opensearchPassword: ""
  
  # Rate limiting
  rateLimit:
    enabled: true
    requestsPerMinute: 100
    burstSize: 200
  
  # Monitoring
  monitoring:
    metricsEnabled: true
    tracingEnabled: true
    loggingLevel: "INFO"
    loggingFormat: "json"

# CronJob for late replay reconciler
reconciler:
  enabled: true
  schedule: "*/15 * * * *"  # Every 15 minutes
  image:
    repository: ghcr.io/example/bol-cd
    tag: "latest"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3

# PostgreSQL subchart configuration
postgresql:
  enabled: true
  auth:
    database: bolcd
    username: bolcd
    password: changeme  # Override in production
    postgresPassword: changeme  # Override in production
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi

# Redis subchart configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: changeme  # Override in production
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

# ServiceMonitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  path: /metrics
  labels:
    prometheus: kube-prometheus

# PrometheusRule for alerting
prometheusRule:
  enabled: true
  rules:
    - alert: HighFalseSuppressionRate
      expr: rate(bolcd_false_suppression_total[5m]) > 0.1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High false suppression rate detected"
        description: "False suppression rate is {{ $value }} (threshold: 0.1)"
    
    - alert: LowReductionRate
      expr: (1 - (rate(bolcd_suppress_total[5m]) / rate(bolcd_alerts_total[5m]))) < 0.3
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Low alert reduction rate"
        description: "Reduction rate is {{ $value }} (threshold: 30%)"
    
    - alert: HighLatency
      expr: histogram_quantile(0.95, rate(bolcd_decision_latency_seconds_bucket[5m])) > 0.5
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High decision latency"
        description: "95th percentile latency is {{ $value }}ms (threshold: 500ms)"

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
  egress:
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 5432  # PostgreSQL
        - protocol: TCP
          port: 6379  # Redis
        - protocol: TCP
          port: 443   # HTTPS for external APIs