name: ci
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install
        run: pip install -r requirements.txt
      - name: Unit & Property Tests
        run: pytest -q
      - name: Lint
        run: ruff check .
      - name: Package
        run: python -m build || true
  perf-guard:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install
        run: pip install -r requirements.txt
      - name: Build package (editable)
        run: pip install -e .
      - name: Run micro-bench
        run: |
          bolcd-bench --d 50 --n 20000 --runs 3 --out bench.json
          python - << 'PY'
          import json, sys
          r = json.load(open('bench.json','r',encoding='utf-8'))
          eps = r['eps_mean']
          p95 = r['latency_ms_p95']
          print('EPS mean=', eps, ' p95 latency ms=', p95)
          # Set wide thresholds to avoid flakiness in CI containers
          assert eps > 10000, f"EPS too low: {eps}"
          assert p95 < 500.0, f"Latency p95 too high: {p95}"
          PY
