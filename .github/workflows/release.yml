name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create GitHub Release, build/push image, sign, and package Helm chart
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive version from tag
        id: ver
        run: |
          TAG="${GITHUB_REF##*/}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: Build & push image with tag
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/bol-cd"
          TAG='${{ steps.ver.outputs.version }}'
          docker buildx build \
            --platform linux/amd64 \
            -t "$IMAGE:$TAG" -t "$IMAGE:latest" \
            --push .

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign image (keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/bol-cd"
          TAG='${{ steps.ver.outputs.version }}'
          cosign sign --yes "$IMAGE:$TAG"
          cosign sign --yes "$IMAGE:latest"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Package Helm chart
        run: |
          helm dependency update deploy/helm || true
          helm package deploy/helm --destination dist

      - name: Generate SBOM for repository (CycloneDX)
        uses: anchore/sbom-action@v0.17.4
        with:
          path: .
          format: cyclonedx-json
          output-file: sbom-repo.json

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tgz
            sbom-repo.json
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


